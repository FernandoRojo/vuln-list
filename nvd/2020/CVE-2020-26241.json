{
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": []
  },
  "cve": {
    "CVE_data_meta": {
      "ASSIGNER": "cve@mitre.org",
      "ID": "CVE-2020-26241"
    },
    "data_format": "MITRE",
    "data_type": "CVE",
    "data_version": "4.0",
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "Go Ethereum, or \"Geth\", is the official Golang implementation of the Ethereum protocol. This is a Consensus vulnerability in Geth before version 1.9.17 which can be used to cause a chain-split where vulnerable nodes reject the canonical chain. Geth's pre-compiled dataCopy (at 0x00...04) contract did a shallow copy on invocation. An attacker could deploy a contract that writes X to an EVM memory region R, then calls 0x00..04 with R as an argument, then overwrites R to Y, and finally invokes the RETURNDATACOPY opcode. When this contract is invoked, a consensus-compliant node would push X on the EVM stack, whereas Geth would push Y. This is fixed in version 1.9.17."
        }
      ]
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": [
            {
              "lang": "en",
              "value": "CWE-682"
            }
          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "name": "https://blog.ethereum.org/2020/11/12/geth_security_release/",
          "refsource": "MISC",
          "tags": [],
          "url": "https://blog.ethereum.org/2020/11/12/geth_security_release/"
        },
        {
          "name": "https://github.com/ethereum/go-ethereum/security/advisories/GHSA-69v6-xc2j-r2jf",
          "refsource": "CONFIRM",
          "tags": [],
          "url": "https://github.com/ethereum/go-ethereum/security/advisories/GHSA-69v6-xc2j-r2jf"
        }
      ]
    }
  },
  "impact": {},
  "lastModifiedDate": "2020-11-25T03:37Z",
  "publishedDate": "2020-11-25T02:15Z"
}