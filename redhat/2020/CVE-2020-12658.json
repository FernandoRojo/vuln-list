{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Under investigation",
      "package_name": "gssproxy",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Under investigation",
      "package_name": "gssproxy",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat OpenShift Container Platform 4.4",
      "fix_state": "Under investigation",
      "package_name": "redhat-coreos",
      "cpe": "cpe:/a:redhat:openshift:4"
    },
    {
      "product_name": "Red Hat OpenShift Container Platform 4.5",
      "fix_state": "Under investigation",
      "package_name": "redhat-coreos",
      "cpe": "cpe:/a:redhat:openshift:4"
    },
    {
      "product_name": "Red Hat OpenShift Container Platform 4.6",
      "fix_state": "Under investigation",
      "package_name": "redhat-coreos",
      "cpe": "cpe:/a:redhat:openshift:4"
    }
  ],
  "threat_severity": "Important",
  "public_date": "2020-12-31T00:00:00Z",
  "bugzilla": {
    "description": "CVE-2020-12658 gssproxy: not unlocking cond_mutex before pthread exit in gp_worker_main() in gp_workers.c",
    "id": "1918258",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1918258"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "9.8",
    "cvss3_scoring_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-667",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2020-12658",
  "document_distribution": "",
  "details": [
    "** DISPUTED ** gssproxy (aka gss-proxy) before 0.8.3 does not unlock cond_mutex before pthread exit in gp_worker_main() in gp_workers.c. NOTE: An upstream comment states \"We are already on a shutdown path when running the code in question, so a DoS there doesn't make any sense, and there has been no additional information provided us (as upstream) to indicate why this would be a problem.\""
  ],
  "references": null
}